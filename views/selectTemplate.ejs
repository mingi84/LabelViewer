<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Label Viewer</title>
    <script language="javascript" type="text/javascript" src="js/jquery-3.6.4.min.js"></script>
    <script language="javascript" type="text/javascript" src="js/bootstrap.bundle.js"></script>
    <script language="javascript" type="text/javascript" src="js/fontawesome.all.min.js"></script>
    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/fontawesome.all.css">
    <link rel="stylesheet" type="text/css" href="css/main.css">
    <script language="javascript" type="text/javascript" src="js/globalconst.js"></script>
</head>
<style>
    .img-thumbnail:hover {
        background: #EBECF1;
    }

    .btn-check:checked+.btn {
        box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;
    }

    .type-template {
        cursor: pointer;
    }
</style>
<!--

-->

<body>
    <%- include('./header') %>
    <div class="container my-4">
        <div class="row" id="gallerylist">
            <div class="col">
                <h4>Select Template</h4>
                <div class="mb-4" style="color: #666666;">Select a label template.</div>

                <h5>Label Template</h5>
                <div class="row mb-4 " id="gallerylist">
                    <div class="col">
                        <div class="card" style="height: 280px;" id="type-api">
                            <div class="card-body" id="template-list">
                                <button type="button" class="btn btn-primary" onclick="pageMove('createtemplate')">+
                                    add</button>

                                <input type="checkbox" class="btn-check" id="btn-none" name="none" autocomplete="off"
                                    onclick="clickLabel(this.name);">
                                <label class="btn" for="btn-none" style="background-color: #f4f4f4;">none</label>

                            </div>
                        </div>
                    </div>
                    <!--
                    <div class="col">
                        <div class="card" style="height: 280px;" id="type-api">
                            <ul class="nav nav-tabs">
                                <li class="nav-item">
                                    <a class="nav-link type-template active" aria-current="page" id="tab-boundingbox"
                                        onclick="changeTemplate(this.id);">Bounding box Template</a>
                                </li>
                                <li class="nav-item ">
                                    <a class="nav-link type-template" id="tab-keypoint"
                                        onclick="changeTemplate(this.id);">Key Point Template</a>
                                </li>
                            </ul>
                            <div class="card-body">
                                <div class="tab-page " id="page-boundingbox">
                                    <div class="d-flex">
                                        <div class="flex-fill">
                                            <div class="bbox-name" style="color: #666666;">Template Name</div>
                                            <div class="mb-2 template-name" >B-box-soccer</div>

                                            <div class="" style="color: #666666;">Template Type</div>
                                            <div class="mb-2">Bounding Box</div>

                                            <div class="" style="color: #666666;">Draw type</div>
                                            <div id="bbox-drawtype" class="mb-2">-</div>

                                            <button type="button" class="btn btn-outline-primary"
                                                onclick="pageMove('createtemplate')">Edit Template</button>
                                        </div>
                                        <div class="border border-1 rounded" style="width: 240px;"></div>
                                    </div>
                                </div>
                                <!-
                                <div class="tab-page" id="page-keypoint" style="display: none;">
                                    <div class="d-flex">
                                        <div class="flex-fill">
                                            <div class="keypoint-name" style="color: #666666;">Template Name</div>
                                            <div class="mb-2 template-name">B-box-soccer</div>

                                            <div class="" style="color: #666666;">Template Type</div>
                                            <div class="mb-2">Keypoint</div>

                                            <div class="" style="color: #666666;">Key Point</div>
                                            <div id="keypoint-count" class="mb-2">-</div>
                                            <button type="button" class="btn btn-outline-primary"
                                                onclick="pageMove('createtemplate')">Edit Template</button>
                                        </div>
                                        <div class="border border-1 rounded" style="width: 240px;"></div>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>-->
                </div>

                <h5>Preview</h5>
                <div class="" style="color: #666666;">Randomly select an image and apply the selected label.</div>

                <div class="row mb-4" id="gallerylist">
                    <div class="col">
                        <div class="card w-100" style="width: 18rem;">
                            <div class="card-body d-flex gap-2">
                                <div class="w-100 " id="image-plus" style="height: 360px; background-size:cover;">
                                    <canvas id="canvas" class="" style=""></canvas>
                                </div>
                                <div class="w-100  row row-cols-3" id="list-thumbnail">
                                    <div class="thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-0" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-1" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-2" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-3" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-4" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-5" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-6" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-7" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                    <div class=" thumbnail align-self-center" style="object-fit: contain;">
                                        <img class="img-thumbnail" id="image-8" onclick="clickThumbnail(this.src)"
                                            src="" alt="">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col d-flex justify-content-between">
                    <button type="button" class="btn btn-lg btn-outline-primary" data-bs-toggle="modal"
                        data-bs-target="#closemodal" onclick="">Back</button>
                    <button type="button" class="btn btn-lg btn-primary" onclick="updateTemplate();">Save</button>
                </div>
            </div>
            <div class="modal" id="delete-popup" tabindex="-1">

            </div>
            <div class="modal fade" id="closemodal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog  modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Confirm</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Returns to the previous page without saving your input.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary"
                                onclick="pageMove('imagegallery');">Understood</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</body>
<script>
    function pageMove(page, id) {
        var params;
        var url = _PAGE_URL;
        switch (page) {
            case "imagegallery":
                params = "imagegallery?source_list_sto=" + sto_id + "&dataset_id=" + dataset_id;
                break;
            case "createtemplate":
                params = "createtemplate?source_list_sto=" + sto_id + "&dataset_id=" + dataset_id;
                break;
            case "gallerylist":
                params = "gallerylist"
                break;
            case "edit":
                params = "createtemplate?source_list_sto=" + sto_id + "&dataset_id=" + dataset_id;
                break;
        }
        window.location.href = url + params;

    }

    const urlParams = new URLSearchParams(window.location.search);
    const sto_id = urlParams.get('source_list_sto');
    const dataset_id = urlParams.get('dataset_id');
    $(document).ready(function () {
        loadTemplateList();
    });

    // after resources (css, images)
    window.addEventListener("load", (event) => {
        getDataset();
        loadDIimage();
        var width = document.getElementById("image-plus").getBoundingClientRect().width;
        var height = document.getElementById("image-plus").getBoundingClientRect().height;
        canvas.width = width;
        canvas.height = height;
    });

    /*
    Data Injector image를 가져온다.
    */
    function loadDIimage() {
        $.ajax({
            type: 'get', //데이터 전송 타입,
            url: _WEBSERVER_ROOT_URL + 'MediaList?StorageID=' + sto_id +
                '&PageNum=1&CountOfPage=20&MediaState=&SortType=1&MediaType=&MediaTitle=&AddDateStart=&AddDateEnd=&ExceptDelete=', //데이터를 주고받을 파일 주소 입력,
            //data: datasetInfo,
            //보내는 데이터,
            dataType: 'JSON', //문자형식으로 받기 , 
            success: function (result) {
                loadImage(result);
            },
            error: function () {
                alert("error");
            }
        });
    }

    function loadImage(result) {
        console.log(result);

        /*
        //zoom-in Image 1
        document.getElementById("image-plus").style.backgroundImage = `url('${_WEBSERVER_DI_URL + DATASET_INFO.image_location + result
            .mediainfo[0].mediapath + result.mediainfo[0].title}')`
            */
        //thumnnail Image 9
        for (i = 0; i < 9; i++) {
            document.getElementById("image-" + i).src = _WEBSERVER_DI_URL + DATASET_INFO.image_location + result
                .mediainfo[i].mediapath + result.mediainfo[i].title;
        }

    }

    /*
     템플릿 정보 저장
     http://127.0.0.1:8008/apidataset/write
     */
    function updateTemplate() {

        var dataset = makeDatasetInfo();

        $.ajax({
            type: 'post', //데이터 전송 타입,
            url: _PAGE_URL + 'apidataset/updataset?datasetId=' + dataset_id, //데이터를 주고받을 파일 주소 입력,
            data: JSON.stringify(dataset), //보내는 데이터,
            dataType: 'JSON', //문자형식으로 받기 , 
            contentType: "application/json",
            success: function (result) {
                pageMove("imagegallery");
            },
            error: function () {
                alert("error");
            }
        });

    }

    function makeDatasetInfo() {
        var selectedTem = selectedTemplate();
        dataset = {
            "kypt_id": selectedTem
        }
        return dataset;
    }

    function selectedTemplate() {

        var selectedArray = [];
        $('input:checked[name=tag-label]:checked').each(function () {
            var templateID = $(this).val();
            selectedArray.push(templateID);
        });

        return selectedArray;
    }

    var DATASET_INFO = {}
    //데이터셋 정보 가져오기
    function getDataset() {
        $.ajax({
            type: 'get', //데이터 전송 타입,
            url: _PAGE_URL + 'apidataset/getdataset?datasetId=' + dataset_id, //데이터를 주고받을 파일 주소 입력,
            //data: JSON.stringify(datasetInfo), //보내는 데이터,
            dataType: 'JSON', //문자형식으로 받기 , 
            contentType: "application/json",
            success: function (result) {
                loadSelectedTemplate(result);
                DATASET_INFO = result
            },
            error: function () {
                alert("error");
            }
        });
    }


    //처음에 선택값 불러와서 그려주는 코드
    function loadSelectedTemplate(result) {
        var selectKey = result.kypt_id;
        if (selectKey.length > 0 && selectKey[0] !== '') {
            selectKey.forEach(function (item) {
                document.getElementById("template-" + item).checked = true;
            });

            selectDraw();
        }
    }

    /*
    템플릿을 선택하지 않는 경우에 대한 행동 처리
    :템플릿을 선택하면 none 선택 풀리고, none선택하면 템플릿 선택 못함

    라벨 리스트 : name="tag-label"
    */
    function clickLabel(buttonName) {
        if (buttonName == "none") {
            $("input:checkbox[name='tag-label']").prop("checked", false);
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        }
        if (buttonName == "tag-label") {
            $("input:checkbox[name='none']").prop("checked", false);
        }
    }

    /*
    템플릿 타입 탭 선택에 따른 행동 처리
    tab ID : 선택한 탭의 아이디
    */
    function changeTemplate(tabID) {
        $('.type-template').removeClass(' active');
        $(`#${tabID}`).addClass(' active');

        if (tabID == "tab-boundingbox") {
            $("#page-boundingbox").show();
            $("#page-keypoint").hide();
        }
        if (tabID == "tab-keypoint") {
            $("#page-keypoint").show();
            $("#page-boundingbox").hide();

        }
    }

    /*
    기존 템플릿 정보 불러오기
    */
    function loadTemplateList() {
        $.ajax({
            type: 'get', //데이터 전송 타입,
            url: _PAGE_URL + 'apidataset/keyp', //데이터를 주고받을 파일 주소 입력,
            //data: JSON.stringify(templateInfo), //보내는 데이터,
            dataType: 'JSON', //문자형식으로 받기 , 
            contentType: "application/json",
            success: function (result) {
                console.log(result)
                keypointList = result;
                drawTemplate(result);

            },
            error: function () {
                alert("error");
            }
        });

    }

    /*
    Ajax 템플릿 정보 삭제
    */
    function deleteTemplate(templateID) {
        $.ajax({
            type: 'get', //데이터 전송 타입,
            url: _PAGE_URL + 'apidataset/delkeyp?keypointId=' + templateID, //데이터를 주고받을 파일 주소 입력,
            //data: datasetInfo,
            //보내는 데이터,
            //dataType: 'JSON', //문자형식으로 받기 , 
            success: function (result) {
                window.location.reload();
            },
            error: function () {
                alert("error");
            }
        });
    }


    /*
    템플릿 정보로 템플릿 그리기
    */
    var t_template;

    function drawTemplate(templateInfo) {
        const template = document.getElementById("template-list");
        t_template = JSON.stringify(templateInfo)
        for (var i = 0; i < templateInfo.length; i++) {
            template.innerHTML += `
                                <input type="checkbox" class="btn-check" name="tag-label" id="template-${templateInfo[i]._id}" value ="${templateInfo[i]._id}"
                                onclick="clickLabel(this.name); showInfo('${templateInfo[i]._id}'); selectDraw();" autocomplete="off">
                                <label class="btn tag-label" for="template-${templateInfo[i]._id}"
                                    style="background-color: ${templateInfo[i].kypt_json.categories[0].color};">
                                    <div class="d-flex">
                                        <div id="template-name">${templateInfo[i].kypt_name}</div>
                                        <i class="fa-solid fa-xmark btn-close ms-2" onclick="deletePopup('${templateInfo[i].kypt_name}','${templateInfo[i]._id}'); return false;"></i>
                                        ` +
                //<i class="fa-solid fa-pen m-1" style="color: #202020;" onclick="pageMove('edit','${templateInfo[i]._id}'); return false;"></i>`
                `</div>
                                </label>`
        }

    }

    /*
    클릭한 템플릿의 정보를 우측에 보여준다.
    */
    function showInfo(id) {

        for (var i = 0; i < t_template.length; i++) {
            if (t_template[i]._id == id) {
                console.log(t_template[i]._id(kypt_name));
                $(".template-name").html(t_template[i]._id(kypt_name));

            }
        }
    }

    /*
    템플릿 삭제 팝업 띄우기
    */
    function deletePopup(templateName, templateID) {

        document.getElementById("delete-popup").innerHTML = `
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" >
                        Delete that template &lt;<span style="font-size: 600; color: #0D6EFD;" id="popup-datasetName">${templateName}</span>&gt;?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="deleteTemplate('${templateID}')">Delete</button>
                    </div>
                </div>
            </div>
        `

        $('#delete-popup').modal('toggle');

    }


    /*
    썸네일을 클릭하면 선택한 이미지와 왼쪽의 확대 이미지에 템플릿을 적용하여 보여준다.
    */
    function clickThumbnail(clickSrc) {
        //console.log(clickSrc)
        return;
        document.getElementById("image-plus").style.backgroundImage = `url('${clickSrc}')`
    }


    //**********Keypoint Draw**********

    function selectDraw() {
        var chkArray = new Array();
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        $("input[name=tag-label]:checked").each(function () {
            var tmpVal = $(this).val();
            chkArray.push(tmpVal);
        });

        chkArray.forEach(function (item) {
            console.log(item);
            compareID(item);
        })
    }

    /*
    파라미터 아이디와 키포인트 아이디를 비교한 후, 필요한 정보만 만들어주는 함수
    */
    function compareID(templateID) {
        for (var i = 0; i < keypointList.length; i++) {
            if (keypointList[i]._id == templateID) {
                console.log(templateID);
                drawExistInfo(keypointList[i]);
            }
        }
    }

    function chunk(data = [], size = 1) {
        const arr = [];

        for (let i = 0; i < data.length; i += size) {
            arr.push(data.slice(i, i + size));
        }

        return arr;
    }

    var keypointList = ''; //템플릿 리스트
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext('2d');
    

    function drawExistInfo(selectTemplate) {
        connectingInfo = selectTemplate.kypt_json.categories[0].skeleton; //초기값을 만들어준다.
        keyinfo = selectTemplate.kypt_json.annotations[0].keypoints; //초기값을 만들어준다.

        //console.log(width, height);

        var totalkeynum = selectTemplate.kypt_json.annotations[0].num_keypoints;
        var keypointinfo = selectTemplate.kypt_json.annotations[0].keypoints;
        var keypointname = selectTemplate.kypt_json.categories[0].keypoints;
        var keypointarr = chunk(keypointinfo, 2);
        var linkInfo = selectTemplate.kypt_json.categories[0].skeleton;

        // Draw keypoints
        for (var i = 0; i < totalkeynum; i++) {
            ctx.beginPath();
            ctx.arc(keypointarr[i][0], keypointarr[i][1], 5, 0, 2 * Math.PI);
            ctx.fillStyle = 'blue';
            ctx.fill();
            ctx.closePath();

            // Draw the text with the key value over the point
            ctx.font = '16px Arial';
            ctx.fillStyle = 'Black';
            ctx.fillText(keypointname[i], keypointarr[i][0], keypointarr[i][1] + 24);
        }

        // Draw lines
        console.log(linkInfo);
        for (var i = 0; i < linkInfo.length; i++) {
            var fromlink = linkInfo[i][0];
            var tolink = linkInfo[i][1];

            ctx.beginPath();
            ctx.moveTo(keypointarr[fromlink][0], keypointarr[fromlink][1]);
            ctx.lineTo(keypointarr[tolink][0], keypointarr[tolink][1]);
            ctx.strokeStyle = "red";
            ctx.lineWidth = 2;
            ctx.stroke();
            ctx.closePath();
        }

    }
</script>

</html>