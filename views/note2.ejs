<script>

    function convertInput(input) {
        // Parse the input as a JSON object
        const obj = JSON.parse(input);

        // Define a function to recursively search for the key
        function findKey(obj, key) {
            // If obj is null or undefined, return null
            if (!obj) {
                return null;
            }

            // If obj is an array, loop through its elements and call findKey recursively
            if (Array.isArray(obj)) {
                for (let i = 0; i < obj.length; i++) {
                    const result = findKey(obj[i], key);
                    if (result !== null) {
                        return `[${i}]${result}`;
                    }
                }
                return null;
            }

            // If obj is an object, loop through its keys and call findKey recursively
            if (typeof obj === 'object') {
                for (const [k, v] of Object.entries(obj)) {
                    if (k === key) {
                        return `.${k}`;
                    }
                    const result = findKey(v, key);
                    if (result !== null) {
                        return `.${k}${result}`;
                    }
                }
                return null;
            }

            // If obj is a primitive value, return null
            return null;
        }

        // Call findKey to search for the key in the object
        const path = findKey(obj, 'x');
        if (path === null) {
            return null;
        }

        // Return the formatted output
        return `${path}`;
    }

    const input3 = '{"labelingInfo":[null,{"pose":{"location":{"오른쪽 무릎":{"x":""}}}}]}';
    const input4 = '{"result":[{"keypoints":[""]}]}';
    const output3 = convertInput(input3);
    const output4 = convertInput(input4);
    console.log(output3); // outputs "labelingInfo[1].pose.location.오른쪽_무릎.x"
    console.log(output4);






    function convertOutput(output) {
        // split the input string by "."
        const path = output.split('.');

        // initialize the result object
        const result = {};

        // create the nested objects and arrays in the result object
        let curr = result;
        for (let i = 0; i < path.length; i++) {
            const element = path[i];
            const match = /([^\[\]]+)(?:\[(\d+)\])?/.exec(element);
            const key = match[1].replace(/_/g, ' ');
            const index = match[2] !== undefined ? parseInt(match[2]) : undefined;
            if (index !== undefined) {
                if (curr[key] === undefined) {
                    curr[key] = [];
                }
                if (i === path.length - 1) {
                    curr[key][index] = '';
                } else {
                    curr[key][index] = {};
                }
                curr = curr[key][index];
            } else {
                if (i === path.length - 1) {
                    curr[key] = '';
                } else {
                    curr[key] = {};
                }
                curr = curr[key];
            }
        }

        // convert the result object to a string
        return JSON.stringify(result);
    }

    const outputs = 'labelingInfo[1].pose.location.오른쪽_무릎.x';
    const output5 = 'result[0].keypoints[0][0]'
    const json2 = convertOutput(outputs);
    console.log(json2);
    console.log(convertOutput(output5));
// outputs: {"labelingInfo":[{"pose":{"location":{"오른쪽 무릎":""}}}]}"






</script>